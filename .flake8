[flake8]
# Specify the number of subprocesses that Flake8 will use to run checks in parallel.
jobs = auto
# Increase the verbosity of Flake8’s output.
verbose = 0
# Decrease the verbosity of Flake8’s output.
quiet = 0
# Select the formatter used to display errors to the user.
format = ${cyan}%(path)s${reset}:${yellow_bold}%(row)d${reset}:${green_bold}%(col)d${reset}: ${red_bold}%(code)s${reset} %(text)s
# Print the total number of errors.
count = True
# Print the source code generating the error/warning in question.
show-source = True
# Count the number of occurrences of each error/warning code and print a report.
statistics = True
# Provide a comma-separated list of glob patterns to exclude from checks.
exclude = .git, __pycache__, docs, old, build, dist, venv, .venv, .eggs
# Provide a comma-separate list of glob patterns to include for checks.
filename = *.py
# Report all errors, even if it is on the same line as a `# NOQA` comment.
disable-noqa = False
# Set the maximum length that any line (with some exceptions) may be.
max-line-length = 80
# Set the maximum allowed McCabe complexity value for a block of code.
max-complexity = 10
# Toggle whether pycodestyle should enforce matching the indentation of the opening bracket’s line.
# incluences E131 and E133
hang-closing = False
# Specify a list of codes to ignore.
ignore =
    W503 # line break before binary operator
# Specify the list of error codes you wish Flake8 to report.
# E/W  - PEP8 errors/warnings (pycodestyle)
# F    - linting errors (pyflakes)
# C    - McCabe complexity error (mccabe)
select = W, E, F, C
